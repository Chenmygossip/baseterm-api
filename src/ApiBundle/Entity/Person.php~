<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

namespace ApiBundle\Entity;

use Gedmo\Mapping\Annotation as Gedmo;
use Doctrine\ORM\Mapping as ORM;
use ApiBundle\Doctrine\RandomIdGenerator;
/**
 * Description of Person
 *
 * @author James Hayes <james.s.hayes@gmail.com>
 * @ORM\Entity
 * @Gedmo\SoftDeleteable(fieldName="deleted_at")
 */
class Person
{
//	/**
//	 * @var integer $key
//	 * @ORM\Id
//	 * @ORM\Column(type="integer")
//	 * @ORM\GeneratedValue(strategy="AUTO")
//	 */
//	protected $key;
	
	/**
	 * @var string $id
	 * @ORM\Id
	 * @ORM\Column(type="guid", unique=true)
	 * @ORM\GeneratedValue(strategy="CUSTOM")
	 * @ORM\CustomIdGenerator(class="ApiBundle\Doctrine\RandomIdGenerator")
	 */
	protected $id;
	
	/**
	 * @var \DateTime $deleted_at
	 * @ORM\Column(name="deleted_at", type="datetime", nullable=true)
	 */
	protected $deleted_at;
	
	/**
	 * @ORM\Column(type="text")
	 */
	protected $data;

	/**
	 * @ORM\ManyToOne(targetEntity="Termbase", inversedBy="people")
	 * @ORM\JoinColumn(name="termbase_id", referencedColumnName="id", nullable=false)
	 */
	protected $termbase;

    /**
     * Get id
     *
     * @return guid
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set deletedAt
     *
     * @param \DateTime $deletedAt
     *
     * @return Person
     */
    public function setDeletedAt($deletedAt)
    {
        $this->deleted_at = $deletedAt;

        return $this;
    }

    /**
     * Get deletedAt
     *
     * @return \DateTime
     */
    public function getDeletedAt()
    {
        return $this->deleted_at;
    }

    /**
     * Set data
     *
     * @param string $data
     *
     * @return Person
     */
    public function setData($data)
    {
        $this->data = $data;

        return $this;
    }

    /**
     * Get data
     *
     * @return string
     */
    public function getData()
    {
        return $this->data;
    }

    /**
     * Set termbase
     *
     * @param \ApiBundle\Entity\Termbase $termbase
     *
     * @return Person
     */
    public function setTermbase(\ApiBundle\Entity\Termbase $termbase = null)
    {
        $this->termbase = $termbase;

        return $this;
    }

    /**
     * Get termbase
     *
     * @return \ApiBundle\Entity\Termbase
     */
    public function getTermbase()
    {
        return $this->termbase;
    }
}
